# A descriptive name for your GitHub Actions workflow.
name: Retrieve Secret and Save to File

# --- Trigger ---
# This section defines when the workflow will run.
# In this case, it triggers on every push to the 'main' branch.
on:
  push:
    branches:
      - main

# --- Jobs ---
# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # The 'build' job is the only job in this workflow.
  build:
    # --- Runner ---
    # Specifies the type of virtual machine to run the job on.
    # 'ubuntu-latest' is a common and versatile choice.
    runs-on: [ Linux ]

    # --- Steps ---
    # A job contains a sequence of tasks called steps.
    # Steps can run commands, run setup tasks, or run an action in your repository,
    # a public repository, or an action published in a Docker registry.
    steps:
      # Step 1: Check out your repository's code
      # This is a standard first step that allows the workflow to access your repo's files.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Get secret from GitHub Secrets and write to a file
      # This is the core step of the pipeline.
      - name: Create file from secret
        # The 'run' keyword tells the job to execute a command on the runner.
        # We use 'echo' to print the secret's value.
        # The secret is accessed securely using the 'secrets' context: ${{ secrets.YOUR_SECRET_NAME }}
        # GitHub automatically redacts this value from logs.
        # The output is then redirected ('>') into a file named 'secret.txt'.
        run:
          echo "${{ secrets.PUBLISHABLEKEY }}" > ~/secret.txt
          echo "${{ secrets.SECRETKEY }}" > ~/secret.txt
          echo "${{ secrets.WEBHOOKSECRET }}" > ~/secret.txt
      # Optional Step 3: Verify the file was created
      # This step lists the files in the current directory to confirm 'secret.txt' exists.
      # It's useful for debugging.
      - name: Verify file creation
        run: ls -l
